# ドキュメントの作成

データ分析の成果物はレポートやプレゼンテーションでまとめることが多いです。
その際、プログラムのソースコードとともに結果に至るまでの過程を記録しておくことは成果物の透明性を高めるために重要です。
そこで大事なのがドキュメントの作成です。
ソースコードと結果、さらに結果に対する解説や処理内容を文章にまとめることで、他の人が成果物を理解しやすくなります。
ここでは、データ分析におけるドキュメントの作成方法について紹介します。

## 文芸的プログラミング

通常のコンピュータプログラミングでは、プログラムのソースコードと実行結果は別々に扱われます。
コードと結果の関連性が失われている状態です。

例えばRの場合、スクリプトファイルにコードを書いて実行すると、コンソールに結果が表示されます。
コンソールに表示された結果をコピーして、別のファイルに貼り付けることで、ソースコードと結果を一つのファイルにまとめることができますが、コピーをし忘れたり、間違って貼り付けたりすることがあります。
またこのような作業では、データや処理内容を変更する度に上書きの必要性が生じるので手間がかかります。

文芸的プログラミングは、ソースコードと結果を含めた関連するドキュメントを一つのファイルにまとめることで、コードと結果の関連性を保ちながらドキュメントを作成する方法です。
コードの変更に伴って出力結果も自動的に更新されるため、手作業でのコピー&ペースト作業が不要になります。
このように動的に生成されるドキュメントを作成するツールとして、R MarkdownやJupyter Notebook(Jupyter)が有名です。

## Quarto

[Quarto](https://quarto.org/)はPositがオープンソースで開発している動的ドキュメント作成システムです。
Jupyterやプレーンテキストで書かれたファイルをもとに、HTMLやPDF、Wordなどのさまざまな形式でのドキュメントを作成することができます。
Rだけでなく、PythonやJuliaなどのプログラミング言語にも対応しています。

Rユーザにとっては、動的ドキュメントの作成に[R Markdown](https://rmarkdown.rstudio.com/)を使うことが一般的ですが、QuartoはR Markdownの後継としても位置づけられています。
そのため、R Markdownの機能をほぼそのまま利用することができます。
実際、QuartoでのR言語の評価はR Markdown同様、knitrパッケージを介して行われます。

ここではQuartoの基本的な使い方として単一のドキュメント生成の手順を紹介します。
一方、Quartoにはウェブサイト、ブログ、書籍執筆をサポートする機能もあります。
これらのQuartoの詳細については[公式ドキュメント](https://quarto.org/docs/guide/)を参照してください。

R Markdownの基礎は @isbn9784297121709 にまとまっています。

### Quartoによるドキュメントの作成

Quartoでは、`.qmd`という拡張子のファイルを作成し、その中にコードと必要な文章を記述します。
`.qmd`ファイルをもとに任意の形式でのドキュメントを生成します。

`.qmd`ファイルからのドキュメント生成の工程を、Quartoではレンダーと呼びます。
レンダーは`.qmd`ファイルだけでなく、Jupyterで使われる`.ipynb`ファイルからも行うことができます。

`.qmd`ファイルの基本構成は以下の通りです。

- YAMLフロントマター... ドキュメントのメタデータ（タイトルや著者名、出力形式等）を記述する部分。YAML形式で記述します。
- 文章... ドキュメントの本文。プレーンテキストに加えて、Markdown記法による文字装飾、LaTeX記法による数式記述が可能です。
- コードブロック（コードセル）[^1]

![Quartoの基本構成要素](https://i.gyazo.com/2e47b271e91f0e6a175bbb91668519f6.png)

[^1]: コードを記述する箇所。Jupyterではコードセルと呼ばれます。

レンダーはコマンドラインを使って以下のように行います。

```bash
quarto render document.qmd --to html
```

このコマンドを実行すると`document.qmd`ファイルをもとにHTML形式のドキュメントを生成します。
出力形式をWordファイルに変更する場合は、`--to`オプションの引数を`docx`に変更するだけです。

```bash
quarto render document.qmd --to docx
```

RStudioやVS Codeなどのアプリケーションでは、Quartoのコマンドを実行するためのインターフェースが提供されています。
これにより、コマンドの入力の手間がなくなり、より直感的にQuartoを使うことができます。

### RStudioでのQuartoの利用

Quartoの機能を試すために、RStudioで新しい`.qmd`ファイルを作成してみましょう。
Quartoが利用可能な状況であれば、RStudioからQuartoを使うことができます。
メニューから「File」、「New File」、「Quarto Document...」の順に進むと以下のような画面が表示されます。

![RStudioでのqmdファイルの新規作成](https://i.gyazo.com/d16522748784a3f6cf9dfa85b69f4e64.png)

タイトルや出力形式を指定して「Create」ボタンをクリックすると新しい`.qmd`ファイルが作成されます。
ここにコードと文章を記述して、レンダーを行います。

レンダーはソースパネル上の「Render」ボタンより実行します。ボタンをクリックすると、バックグラウンドで`quarto`のコマンドが実行され、`.qmd`ファイル中のソースコードの実行結果をもとに指定した形式のドキュメントが生成されます。


### PDFの出力

Quartoで日本語のPDFを生成する場合、2つの選択肢があります。
一つは出力形式を指定する際に`pdf`を指定する方法です。これはLaTeXを使ってPDFを生成する方法です。
もう一つの方法は`typst`を出力形式として指定する方法です。
まじは一般的なLaTeXによるPDF出力方法を見てみましょう。

LaTeXを使ったPDF出力を行う場合、事前にLaTeXの環境を揃える必要があります。

QuartoのコマンドからもLaTeX環境を導入可能です。

```bash
quarto install tinytex
```

このコマンドを実行すると、[TinyTeX](https://yihui.org/tinytex/)というLaTeXディストリビューションがインストールされます。
ここまでで最低限のPDF出力環境が整います。

次に[Typst](https://typst.app/docs)を利用したPDF出力方法を紹介します。
TypstはLaTeXなどの高度で詳細な組版システムとWordやGoogleドキュメントなどの単純なツールの代替となるように設計された新しい組版システムです。

はLaTeXを使わずにPDFを生成する方法です。
typst
