# プロジェクト

データ分析作業は一朝一夕には終わらないものです。
短いものでは数ヶ月、時には数年にわたることも珍しくありません。
データ分析に費やす時間が長くなると、次第に関連するファイルも増えていきます。
最初は数ファイルだったものが、追加の分析や再解析を行う過程で、数十、数百と増えていくこともあります。

担当する案件も一つだけでなく、複数の案件を同時に進めることもあります。
そのとき、案件に応じて利用するデータやコードは当然異なります。

`案件 = プロジェクト`として捉え

長期間、多数のファイルを扱う作業を効率的に行うために、プロジェクトを利用することができます。
プロジェクトは、関連するファイルを一つのまとまりとして扱うための仕組みです。

そのため、作業を途中で中断しても、後で再開できるように、作業内容を保存しておくことが重要です。このような作業を効率的に行うために、プロジェクトを利用することができます。

## 統合開発環境

プログラム開発で必要なエディタやコンパイラ、デバッガなどのツールを一つにまとめたものを統合開発環境（IDE: Integrated Development Environment）と呼びます。
Rは単体のアプリケーションとして提供されていますが、RStudioやVS CodeというIDEを利用することで、より使いやすく、効率的に作業を行えるようになる利点があります。

## RStudio

RStudioは、RおよびPythonのための統合開発環境（IDE）です。
Posit（旧RStudio）により開発されており、無償で利用可能なものとしてデスクトップ版とサーバー版が存在します。
デスクトップ版の実行には、R 3.6.0以上のインストールが必要です。

RStudioの特徴は、Rの実行に必要、利便性を高める機能を「ペイン」と呼ばれる区画に分けて表示していることです。

RStudioの機能は @isbn9784297121709 に詳しく記載されています。


### RStudioのプロジェクト

RStudioではプロジェクト機能を利用して、データやコード、成果物を一つのまとまりとして扱うことができます。
また、Gitバージョン管理との連携も可能で

```{r}
#| eval: false
#| echo: true
rstudioapi::openProject("~/Documents/projects2024/rrr-demo")
```

![再現可能なデータ分析プロジェクトの立ち上げ。2つのチェックボックスにチェックをつけて作成することで、gitリポジトリの初期化とrenvパッケージによるパッケージの管理が設定され、再現可能性が高まる。](https://i.gyazo.com/ade72f5ee60d987e52c5cc4d1dc5adc6.png)

## VS Codeの利用

Microsoftが提供する[Visual Studio Code (VS Code)](https://code.visualstudio.com/)もRの開発環境の選択肢となります。
標準ではRの実行環境は提供されていませんが、拡張機能をインストールすることでRStudioのようにコーディングから実行までシームレスに行うことができます。

VS Codeでは、作業空間と呼ばれる単位で関連するファイルを管理します。
これはRStudioのプロジェクト機能と類似の考え方です。

VS Codeの特徴は、Rだけでなくさまざまな言語の開発に対応していることです。
拡張機能を利用することで、ユーザーが必要とする機能を追加することができます。
拡張機能には、Git、GitHubとの連携を行うものや[ドキュメント](document.qmd)の生成を容易に行うものなどがあります。
これによりデータ分析の作業を効率的に行うことが期待されます。

### Positron

現時点で正式なリリースはされていませんが、PositがオープンソースのVS Codeをベースに開発を進めるPositronも、RやPythonといったデータ分析で用いる言語に特化した統合開発環境として注目されています。

VS Code同様に拡張機能によって、多様な機能を追加できる点も魅力の一つです。
VS Codeとの違いは、ライセンス上の問題からインストール可能な機能拡張は[Open VSX Registry] (https://open-vsx.org/)で管理されるものに限定されるという点です。
ここには数多くの拡張機能が登録されていますが、すべてではありません。
いくつかの拡張機能は本家のVS Codeでのみ利用可能です。

## hereパッケージ

## スタイルガイド
